PartType spacer;
PartType scar;
PartType promoter;
PartType cds;
PartType terminator;
PartType cassette;

promoter P_BA(.SEQUENCE("TTACAAAGAAAATTCGACAAACTGTTATTTTTCTATCTATTTAaatgtacacccgTTTGtttactttACTTTAGTTATGTACCTTTGTCGGCaatgtacacccgaaagtttacttt"));
promoter P_IPTG(.SEQUENCE("TTACAAAGAAAATTCGACAAACTGTTATTTTTCTATCTATTTATTTGAATTGTGAGCGGATAACAATTACCTTTGTCGGCAATTGTGAGCGGATAACAATTAAATAAAGATATTCTCGTCAAACAAATATAAATAATATAAAC"));
promoter P_aTc(.SEQUENCE("ttttgcacccgctttccaagagaagaaagccttgttaaattgacttagtgtaaaagcgcagtactgcttgaccataagaacaaaaaaatctctatcactgatagggataaagtttggaagataaagctaaaagttcttatctttgcagtctccctatcagtgatagagacgca"));
cds M1(.SEQUENCE("CAAAGATAATAGAACTTAAGGTTTTAGAGCTAGAAATAGCAAGTTAAAATAAGGCTAGTCCGTTATCAACTTGAAAAAGTGGCACCGAGTCGGTGCTTTTTTT"));
terminator L3S3P41(.SEQUENCE("GGATCCAAAAAAAAAAAACACCCTAACGGGTGTTTTTTTTTTTTTGGTCTGCCgcggccgc"));
promoter PM1(.SEQUENCE("TGCTGTCATAGGCCGGTTGTCCGGTAGTCCGGATGATTTAAGGAAGATTTCTCTTCTTTTTTCACTTTCTCCGAACAACCTCCACTTAAGTTCTATTATCTTTGCAGT"));
cds M3(.SEQUENCE("CAAAGATAATTAAGTTAAGGGTTTTAGAGCTAGAAATAGCAAGTTAAAATAAGGCTAGTCCGTTATCAACTTGAAAAAGTGGCACCGAGTCGGTGCTTTTTTT"));
terminator ECK120034435(.SEQUENCE("GGATCCCTCGGTACCAAATTCCAGAAAAGAGACGCTGAAAAGCGTCTTTTTTCGTTTTGGTCCgcggccgc"));
promoter PM3(.SEQUENCE("TGCTGTCATAGGCCGGTTGTCCGGTAGTCCGGATGATTTAAGGAAGATTTCTCTTCTTTTTTCACTTTCTCCGAACAACCTCCACCTTAACTTAATTATCTTTGCAGT"));
cds M5(.SEQUENCE("CAAAGATAGAATAAGTCTTTGTTTTAGAGCTAGAAATAGCAAGTTAAAATAAGGCTAGTCCGTTATCAACTTGAAAAAGTGGCACCGAGTCGGTGCTTTTTTT"));
terminator ECK125109870(.SEQUENCE("ccaattattgAACACCCTAACGGGTGTTTTTTTGTTTctggtctccc"));
promoter PM5(.SEQUENCE("TGCTGTCATAGGCCGGTTGTCCGGTAGTCCGGATGATTTAAGGAAGATTTCTCTTCTTTTTTCACTTTCTCCGAACAACCTCCAAAAGACTTATTCTATCTTTGCAGT"));
cds M6(.SEQUENCE("CAAAGATAAAATGGTTTAGTGTTTTAGAGCTAGAAATAGCAAGTTAAAATAAGGCTAGTCCGTTATCAACTTGAAAAAGTGGCACCGAGTCGGTGCTTTTTTT"));
terminator L3S3P31(.SEQUENCE("GGATCCCCAATTATTGAACACCCTAACGGGTGTTTTTTTTTTTTTGGTCTCCCgcggccgc"));
promoter PM6(.SEQUENCE("TGCTGTCATAGGCCGGTTGTCCGGTAGTCCGGATGATTTAAGGAAGATTTCTCTTCTTTTTTCACTTTCTCCGAACAACCTCCAACTAAACCATTTTATCTTTGCAGT"));
cds M7(.SEQUENCE("CAAAGATATATAACTATATAGTTTTAGAGCTAGAAATAGCAAGTTAAAATAAGGCTAGTCCGTTATCAACTTGAAAAAGTGGCACCGAGTCGGTGCTTTTTTT"));
terminator pheA_1(.SEQUENCE("gacgaacaaTAAGGCCTCCCAAATCGGGGGGCCTTTTTTATTgaTaacaaaa"));
promoter PM7(.SEQUENCE("TGCTGTCATAGGCCGGTTGTCCGGTAGTCCGGATGATTTAAGGAAGATTTCTCTTCTTTTTTCACTTTCTCCGAACAACCTCCATATATAGTTATATATCTTTGCAGT"));
scar F_scar(.SEQUENCE("CGCT"));
scar E_scar(.SEQUENCE("GCTT"));
scar D_scar(.SEQUENCE("AGGT"));
scar C_scar(.SEQUENCE("AATG"));
scar B_scar(.SEQUENCE("TACG"));
scar A_scar(.SEQUENCE("GGAG"));
scar Y_scar(.SEQUENCE("ATTG"));
scar X_scar(.SEQUENCE("TGTC"));
scar V_scar(.SEQUENCE("TCTG"));
scar U_scar(.SEQUENCE("GGGC"));
scar R_scar(.SEQUENCE("GTAA"));
scar Q_scar(.SEQUENCE("GAGT"));
scar P_scar(.SEQUENCE("CCTA"));
scar O_scar(.SEQUENCE("ATGC"));
scar G_scar(.SEQUENCE("ATAG"));
cassette nanoluc_cassette(.SEQUENCE("ATGGTTTTTACTCTGGAAGATTTTGTTGGCGATTGGCGTCAGACCGCGGGTTATAATTTGGATCAAGTCCTGGAACAGGGTGGCGTAAGCTCTCTGTTCCAGAACCTGGGTGTGAGCGTGACGCCGATTCAGCGCATCGTTCTGTCCGGCGAGAACGGTCTGAAAATTGATATTCATGTGATCATCCCGTACGAAGGCCTGAGCGGTGACCAAATGGGTCAAATCGAGAAAATCTTTAAAGTCGTCTACCCAGTTGACGATCACCACTTCAAGGTTATCTTGCATTACGGTACGCTGGTGATTGATGGTGTGACCCCGAATATGATTGACTATTTCGGCCGTCCGTATGAAGGCATTGCCGTTTTTGACGGTAAAAAGATCACCGTCACCGGTACCCTGTGGAATGGCAATAAGATTATTGACGAGCGTCTGATTAACCCGGACGGCAGCCTGCTGTTCCGCGTGACCATCAACGGTGTCACGGGTTGGCGTCTGTGCGAGCGCATCCTGGCATAA"));

PartType fencepost;
fencepost L1();
fencepost L2();

cassette Gate1_a_cassette();
Device Gate1_a(
    P_IPTG,
    Gate1_a_cassette
);

cassette Gate7_a_cassette();
Device Gate7_a(
    P_aTc,
    Gate7_a_cassette
);

cassette Gate3_a_cassette();
Device Gate3_a(
    P_BA,
    Gate3_a_cassette
);

cassette Gate3_b_cassette();
Device Gate3_b(
    PM1,
    Gate3_b_cassette
);

cassette Gate5_a_cassette();
Device Gate5_a(
    PM3,
    Gate5_a_cassette
);

cassette Gate6_a_cassette();
Device Gate6_a(
    PM7,
    Gate6_a_cassette
);

cassette Gate6_b_cassette();
Device Gate6_b(
    PM5,
    Gate6_b_cassette
);

Device nanoluc_reporter_a(
    PM6,
    nanoluc_cassette
);


Rule Gate1_aRule0( ON Gate1_a:
    ALL_FORWARD
);

Rule Gate7_aRule0( ON Gate7_a:
    ALL_FORWARD
);

Rule Gate3_aRule0( ON Gate3_a:
    ALL_FORWARD
);

Rule Gate3_bRule0( ON Gate3_b:
    ALL_FORWARD
);

Rule Gate5_aRule0( ON Gate5_a:
    ALL_FORWARD
);

Rule Gate6_aRule0( ON Gate6_a:
    ALL_FORWARD
);

Rule Gate6_bRule0( ON Gate6_b:
    ALL_FORWARD
);

Rule nanoluc_reporter_aRule0( ON nanoluc_reporter_a:
    ALL_FORWARD
);


Gate1_a_devices = product(Gate1_a);
Gate7_a_devices = product(Gate7_a);
Gate3_a_devices = product(Gate3_a);
Gate3_b_devices = product(Gate3_b);
Gate5_a_devices = product(Gate5_a);
Gate6_a_devices = product(Gate6_a);
Gate6_b_devices = product(Gate6_b);
nanoluc_reporter_a_devices = product(nanoluc_reporter_a);

Device Gate1_aDevice();
Device Gate7_aDevice();
Device Gate3_aDevice();
Device Gate3_bDevice();
Device Gate5_aDevice();
Device Gate6_aDevice();
Device Gate6_bDevice();
Device nanoluc_reporter_aDevice();

Device circuit();

Rule CircuitRule0( ON circuit:
    CONTAINS Gate1_a AND
    CONTAINS Gate7_a AND
    CONTAINS Gate3_a AND
    CONTAINS Gate3_b AND
    CONTAINS Gate5_a AND
    CONTAINS Gate6_a AND
    CONTAINS Gate6_b AND
    CONTAINS nanoluc_reporter_a AND
    ALL_FORWARD AND
    STARTSWITH L1 AND
    ENDSWITH L2 AND
    Gate7_a AFTER Gate6_a AND
    Gate7_a AFTER Gate5_a AND
    Gate7_a AFTER Gate3_a AND
    Gate7_a AFTER Gate1_a AND
    Gate6_a AFTER Gate5_a AND
    Gate6_a AFTER Gate3_a AND
    Gate6_a AFTER Gate1_a AND
    Gate5_a AFTER Gate3_a AND
    Gate5_a AFTER Gate1_a AND
    Gate3_a AFTER Gate1_a AND
    Gate6_b AFTER Gate3_b AND
    CONTAINS Gate1_a AND
    CONTAINS Gate7_a AND
    CONTAINS Gate3_a AND
    CONTAINS Gate3_b AND
    CONTAINS Gate5_a AND
    CONTAINS Gate6_a AND
    CONTAINS Gate6_b AND
    CONTAINS nanoluc_reporter_a
);
Array allResults;

for(num i1 = 0; i1 < sizeof(Gate1_a_devices); i1 = i1 + 1) {} 
for(num i2 = 0; i2 < sizeof(Gate7_a_devices); i2 = i2 + 1) {} 
for(num i3 = 0; i3 < sizeof(Gate3_a_devices); i3 = i3 + 1) {} 
for(num i4 = 0; i4 < sizeof(Gate3_b_devices); i4 = i4 + 1) {} 
for(num i5 = 0; i5 < sizeof(Gate5_a_devices); i5 = i5 + 1) {} 
for(num i6 = 0; i6 < sizeof(Gate6_a_devices); i6 = i6 + 1) {} 
for(num i7 = 0; i7 < sizeof(Gate6_b_devices); i7 = i7 + 1) {} 
for(num i8 = 0; i8 < sizeof(nanoluc_reporter_a_devices); i8 = i8 + 1) {} 

Gate1_aDevice = Gate1_a_devices[i1];
Gate7_aDevice = Gate7_a_devices[i2];
Gate3_aDevice = Gate3_a_devices[i3];
Gate3_bDevice = Gate3_b_devices[i4];
Gate5_aDevice = Gate5_a_devices[i5];
Gate6_aDevice = Gate6_a_devices[i6];
Gate6_bDevice = Gate6_b_devices[i7];
nanoluc_reporter_aDevice = nanoluc_reporter_a_devices[i8];

Device circuit(
    Gate1_aDevice,
    Gate7_aDevice,
    Gate3_aDevice,
    Gate3_bDevice,
    Gate5_aDevice,
    Gate6_aDevice,
    Gate6_bDevice,
    nanoluc_reporter_aDevice,
    L1,
    L2
);


result = permute(circuit);

allResults = allResults + result;

}
}
}
}
}
}
}
}
